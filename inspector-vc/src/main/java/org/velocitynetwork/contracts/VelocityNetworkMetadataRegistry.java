package org.velocitynetwork.contracts;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes2;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/LFDT-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.7.0.
 */
@SuppressWarnings("rawtypes")
public class VelocityNetworkMetadataRegistry extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b50613214806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063891d245e116100ad578063a3b3cfbc11610071578063a3b3cfbc146102ab578063c50675d3146102d0578063c50a2def146102e3578063d3050f6e14610306578063fb5e3c251461031957600080fd5b8063891d245e146102095780638f6ece411461024557806392ecd653146102585780639448cc041461026b578063a2f41a5a1461029857600080fd5b8063465c4105116100f4578063465c4105146101aa57806353866d4f146101bd57806354c4992a146101d0578063579e2b5b146101e357806382681bfa146101f657600080fd5b80631aee318e146101265780631e1f5ea61461014f5780632f9a6d801461018257806340522a3d14610197575b600080fd5b6101396101343660046126d4565b61032c565b6040516101469190612d25565b60405180910390f35b61017261015d366004612878565b60016020526000908152604090205460ff1681565b6040519015158152602001610146565b61019561019036600461269a565b6103b9565b005b6101956101a53660046125af565b6104e1565b6101726101b8366004612a11565b6105c1565b6101956101cb3660046127ad565b61061a565b6101956101de366004612706565b610659565b6101956101f1366004612af1565b61066c565b6101956102043660046125ee565b61069e565b61017261021736600461266f565b6001600160a01b03919091166000908152600260208181526040808420948452939052919020015460ff1690565b610195610253366004612a7f565b610840565b610195610266366004612892565b61084f565b610172610279366004612878565b6001600160f01b03191660009081526001602052604090205460ff1690565b6101956102a636600461269a565b61085e565b6004546001600160a01b03165b6040516001600160a01b039091168152602001610146565b6101956102de36600461293f565b61098a565b6102f66102f136600461266f565b6109b2565b6040516101469493929190612ddd565b6102b861031436600461263b565b610a7a565b6101956103273660046125af565b610bbd565b6060600061033983610ccd565b905061034481611523565b6103b35760405162461bcd60e51b815260206004820152603560248201527f4f6e6c792066726565206372656164656e7469616c2074797065732069732061604482015274363637bbb2b2103bb4ba3437baba1031b7bab837b760591b60648201526084015b60405180910390fd5b92915050565b600060029054906101000a90046001600160a01b03166001600160a01b03166334ca4b646040518163ffffffff1660e01b815260040160206040518083038186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f91906125d2565b6001600160a01b0316336001600160a01b03161461046f5760405162461bcd60e51b81526004016103aa90612e30565b60005b81518110156104dd576001600083838151811061049f57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160f01b0319168252810191909152604001600020805460ff19169055806104d581612f94565b915050610472565b5050565b600060029054906101000a90046001600160a01b03166001600160a01b03166334ca4b646040518163ffffffff1660e01b815260040160206040518083038186803b15801561052f57600080fd5b505afa158015610543573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056791906125d2565b6001600160a01b0316336001600160a01b0316146105975760405162461bcd60e51b81526004016103aa90612e30565b600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6000816040516020016105d49190612b7c565b60405160208183030381529060405280519060200120836040516020016105fb9190612b7c565b6040516020818303038152906040528051906020012014905092915050565b6040805133602082015260009161064291015b604051602081830303815290604052836115a6565b9050610651868686868561162f565b505050505050565b610666848484843361162f565b50505050565b60408051336020820152600091610683910161062d565b9050610694888888888888876117c8565b5050505050505050565b600054610100900460ff16158080156106be5750600054600160ff909116105b806106d85750303b1580156106d8575060005460ff166001145b61073b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b6000805460ff19166001179055801561075e576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b038616021781555b82518110156107f45760018060008584815181106107af57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160f01b0319168252810191909152604001600020805460ff1916911515919091179055806107ec81612f94565b915050610781565b50801561083b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610651868686868686336117c8565b6106518686868686863361196b565b600060029054906101000a90046001600160a01b03166001600160a01b03166334ca4b646040518163ffffffff1660e01b815260040160206040518083038186803b1580156108ac57600080fd5b505afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e491906125d2565b6001600160a01b0316336001600160a01b0316146109145760405162461bcd60e51b81526004016103aa90612e30565b60005b81518110156104dd57600180600084848151811061094557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160f01b0319168252810191909152604001600020805460ff19169115159190911790558061098281612f94565b915050610917565b604080513360208201526000916109a1910161062d565b90506106948888888888888761196b565b60026020908152600092835260408084209091529082529020805460018201805460f083811b9462010000909404901b9291906109ee90612f08565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1a90612f08565b8015610a675780601f10610a3c57610100808354040283529160200191610a67565b820191906000526020600020905b815481529060010190602001808311610a4a57829003601f168201915b5050506002909301549192505060ff1684565b600080610a8683611b6e565b600480546040516307db6d1b60e01b81529293506001600160a01b0316916307db6d1b91610ab8918891869101612d01565b60206040518083038186803b158015610ad057600080fd5b505afa925050508015610b00575060408051601f3d908101601f19168201909252610afd918101906125d2565b60015b610baa57610b0c612fd1565b806308c379a01415610b9e5750610b21612fe9565b80610b2c5750610ba0565b610b4e816040518060600160405280603b8152602001613119603b91396105c1565b8190610b6d5760405162461bcd60e51b81526004016103aa9190612e1d565b506000610b79836121a4565b90610b975760405162461bcd60e51b81526004016103aa9190612e1d565b5050610bb3565b505b3d6000803e3d6000fd5b91506103b39050565b5060009392505050565b6004546001600160a01b03161580610c5f57506004805460408051630d3292d960e21b815290516001600160a01b03909216926334ca4b64928282019260209290829003018186803b158015610c1257600080fd5b505afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a91906125d2565b6001600160a01b0316336001600160a01b0316145b610cab5760405162461bcd60e51b815260206004820152601e60248201527f5065726d697373696f6e733a2063616c6c6572206973206e6f7420564e46000060448201526064016103aa565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060600082516001600160401b03811115610cf857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d5057816020015b6040805160a0810182526000808252602080830182905292820152606080820181905260808201528252600019909201910181610d165790505b50905060005b835181101561151c5760026000858381518110610d8357634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610dd157634e487b7160e01b600052603260045260246000fd5b60209081029190910181015181015182528101919091526040016000206002015460ff16610e345760405162461bcd60e51b815260206004820152601060248201526f131a5cdd081a59081b9bdd081d5cd95960821b60448201526064016103aa565b60036000858381518110610e5857634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610ea657634e487b7160e01b600052603260045260246000fd5b60200260200101516020015181526020019081526020016000206000858381518110610ee257634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160409081015163ffffffff16835290820192909252016000206002015460ff16610f4b5760405162461bcd60e51b815260206004820152600e60248201526d125b99195e081b9bdd081d5cd95960921b60448201526064016103aa565b60026000858381518110610f6f57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610fbd57634e487b7160e01b600052603260045260246000fd5b602002602001015160200151815260200190815260200160002060000160009054906101000a900460f01b82828151811061100857634e487b7160e01b600052603260045260246000fd5b60209081029190910101516001600160f01b03199091169052835160039060009086908490811061104957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020600085838151811061109757634e487b7160e01b600052603260045260246000fd5b602002602001015160200151815260200190815260200160002060008583815181106110d357634e487b7160e01b600052603260045260246000fd5b60200260200101516040015163ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900460f01b82828151811061112a57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001906001600160f01b03191690816001600160f01b031916815250506002600085838151811061117457634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008583815181106111c257634e487b7160e01b600052603260045260246000fd5b602002602001015160200151815260200190815260200160002060000160029054906101000a900460f01b82828151811061120d57634e487b7160e01b600052603260045260246000fd5b6020026020010151604001906001600160f01b03191690816001600160f01b031916815250506003600085838151811061125757634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008583815181106112a557634e487b7160e01b600052603260045260246000fd5b602002602001015160200151815260200190815260200160002060008583815181106112e157634e487b7160e01b600052603260045260246000fd5b60200260200101516040015163ffffffff1663ffffffff168152602001908152602001600020600101805461131590612f08565b80601f016020809104026020016040519081016040528092919081815260200182805461134190612f08565b801561138e5780601f106113635761010080835404028352916020019161138e565b820191906000526020600020905b81548152906001019060200180831161137157829003601f168201915b50505050508282815181106113b357634e487b7160e01b600052603260045260246000fd5b602002602001015160600181905250600260008583815181106113e657634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020600085838151811061143457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518152602001908152602001600020600101805461145c90612f08565b80601f016020809104026020016040519081016040528092919081815260200182805461148890612f08565b80156114d55780601f106114aa576101008083540402835291602001916114d5565b820191906000526020600020905b8154815290600101906020018083116114b857829003601f168201915b50505050508282815181106114fa57634e487b7160e01b600052603260045260246000fd5b602002602001015160800181905250808061151490612f94565b915050610d56565b5092915050565b6000805b825181101561159d5761157e83828151811061155357634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160f01b03191660009081526001602052604090205460ff1690565b61158b5750600092915050565b8061159581612f94565b915050611527565b50600192915050565b8151602083012060009060008060006115be866122d6565b60408051600081526020810180835289905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015611619573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b600061163a86610ccd565b905061164581611523565b156116925760405162461bcd60e51b815260206004820152601960248201527f4e6f2070616964206372656164656e7469616c2074797065730000000000000060448201526064016103aa565b600080546040516378a9bb4360e11b81526001600160a01b038581166004830152620100009092049091169063f15376869060240160206040518083038186803b1580156116df57600080fd5b505afa1580156116f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117179190612a67565b600054604051630428d69160e41b81529192506201000090046001600160a01b03169063428d6910906117569084908a908a908a908a90600401612e5f565b600060405180830381600087803b15801561177057600080fd5b505af1158015611784573d6000803e3d6000fd5b505050507fb9dd5ee1a79744a6d7df5d19e4f134f68f60763af7cb3b613f0e8c805d60f402826040516117b79190612d25565b60405180910390a150505050505050565b6004805460405163de1ac2fd60e01b81526001600160a01b03848116938201939093526000929091169063de1ac2fd9060240160206040518083038186803b15801561181357600080fd5b505afa158015611827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184b91906125d2565b6001600160a01b03811660009081526002602081815260408084208d8552909152909120015490915060ff16156118bb5760405162461bcd60e51b8152602060048201526014602482015273131a5cdd081a5908185b1c9958591e481d5cd95960621b60448201526064016103aa565b6001600160a01b03811660009081526002602090815260408083208b84528252909120805460f08a811c620100000263ffffffff19909216908a901c171781558651909161191091600184019189019061234a565b5060028101805460ff191660011790556040517f788ba2e4c4d09e6aab92832a08b45f7c5fc06147609d13484ddd7f94b1b2c1a29061195890849089908d908a908a90612b98565b60405180910390a1505050505050505050565b60006119778289610a7a565b90506127108563ffffffff16106119c05760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016103aa565b6001600160a01b0381166000908152600360209081526040808320898452825280832063ffffffff8916845290915290206002015460ff1615611a3a5760405162461bcd60e51b8152602060048201526012602482015271125b99195e08185b1c9958591e481d5cd95960721b60448201526064016103aa565b6001600160a01b03811660009081526002602081815260408084208a8552909152909120015460ff16611aa75760405162461bcd60e51b81526020600482015260156024820152744c697374204964206e6f74206176656c6961626c6560581b60448201526064016103aa565b6001600160a01b0381166000908152600360209081526040808320898452825280832063ffffffff891684528252909120805461ffff191660f08b901c17815588519091611afc9160018401918b019061234a565b506002808201805460ff191660019081179091556001600160a01b0384166000908152602092835260408082208b835290935282902091517f5b3dbf2c1245cb7fe5833a37872aae67caba79bd65f30522e778fc48297376a5926119589286929101908b908e908c908c908c90612bf4565b604080518082018252601081526f63726564656e7469616c3a697373756560801b60208083019190915282518084018452601881527763726564656e7469616c3a6964656e74697479697373756560401b818301528351808501909452601784527663726564656e7469616c3a636f6e74616374697373756560481b9184019190915260609282610f0160f31b6001600160f01b031987161415611c16575091949350505050565b61107b60f21b6001600160f01b031987161415611c37575091949350505050565b61af2960f01b6001600160f01b031987161415611c58575091949350505050565b600960f21b6001600160f01b031987161415611c78575091949350505050565b61306160f21b6001600160f01b031987161415611c99575091949350505050565b6121a160f21b6001600160f01b031987161415611cba575091949350505050565b6105df60f41b6001600160f01b031987161415611cdb575091949350505050565b61ade960f01b6001600160f01b031987161415611cfc575091949350505050565b61104b60f11b6001600160f01b031987161415611d1d575091949350505050565b61b03760f01b6001600160f01b031987161415611d3e575091949350505050565b61c38560f01b6001600160f01b031987161415611d5f575091949350505050565b612f8760f11b6001600160f01b031987161415611d80575091949350505050565b609760f71b6001600160f01b031987161415611da0575091949350505050565b613cb760f21b6001600160f01b031987161415611dc1575091949350505050565b61955b60f01b6001600160f01b031987161415611de2575091949350505050565b613a8b60f11b6001600160f01b031987161415611e03575091949350505050565b61775160f11b6001600160f01b031987161415611e24575090949350505050565b61b89f60f01b6001600160f01b031987161415611e45575091949350505050565b6114a560f11b6001600160f01b031987161415611e66575091949350505050565b61432160f11b6001600160f01b031987161415611e87575091949350505050565b619b9f60f01b6001600160f01b031987161415611ea8575091949350505050565b612d5b60f11b6001600160f01b031987161415611ec9575091949350505050565b61b13960f01b6001600160f01b031987161415611eea575091949350505050565b61288560f21b6001600160f01b031987161415611f0b575091949350505050565b6125a760f21b6001600160f01b031987161415611f2b5750949350505050565b618f0760f01b6001600160f01b031987161415611f4b5750949350505050565b611d9360f21b6001600160f01b031987161415611f6c575091949350505050565b6136d360f21b6001600160f01b031987161415611f8d575091949350505050565b617e1560f01b6001600160f01b031987161415611fae575091949350505050565b617a5560f11b6001600160f01b031987161415611fcf575091949350505050565b61851f60f01b6001600160f01b031987161415611ff0575090949350505050565b61feab60f01b6001600160f01b031987161415612011575090949350505050565b6177e560f11b6001600160f01b031987161415612032575091949350505050565b616c5760f11b6001600160f01b031987161415612053575091949350505050565b61deef60f01b6001600160f01b031987161415612074575090949350505050565b61149b60f11b6001600160f01b031987161415612095575091949350505050565b6186bf60f01b6001600160f01b0319871614156120b6575091949350505050565b612d8760f11b6001600160f01b0319871614156120d7575091949350505050565b617b1760f01b6001600160f01b0319871614156120f8575090949350505050565b6114e960f11b6001600160f01b031987161415612119575091949350505050565b6118f760f21b6001600160f01b0319871614156121395750949350505050565b614ffb60f01b6001600160f01b0319871614156121595750949350505050565b61782960f11b6001600160f01b03198716141561217a575091949350505050565b61280160f21b6001600160f01b03198716141561219b575090949350505050565b95945050505050565b60606121d8826040518060400160405280601081526020016f63726564656e7469616c3a697373756560801b8152506105c1565b156121fc576040518060800160405280604281526020016131546042913992915050565b612236826040518060400160405280601881526020017763726564656e7469616c3a6964656e74697479697373756560401b8152506105c1565b1561225a576040518060800160405280604a81526020016130cf604a913992915050565b612293826040518060400160405280601781526020017663726564656e7469616c3a636f6e74616374697373756560481b8152506105c1565b156122b7576040518060800160405280604981526020016131966049913992915050565b60405180608001604052806044815260200161308b6044913992915050565b6000806000835160411461232c5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016103aa565b50505060208101516040820151606090920151909260009190911a90565b82805461235690612f08565b90600052602060002090601f01602090048101928261237857600085556123be565b82601f1061239157805160ff19168380011785556123be565b828001600101855582156123be579182015b828111156123be5782518255916020019190600101906123a3565b506123ca9291506123ce565b5090565b5b808211156123ca57600081556001016123cf565b600082601f8301126123f3578081fd5b8135602061240082612eb9565b60405161240d8282612f68565b8381528281019150858301600585901b8701840188101561242c578586fd5b855b858110156124515761243f82612510565b8452928401929084019060010161242e565b5090979650505050505050565b600082601f83011261246e578081fd5b8135602061247b82612eb9565b604080516124898382612f68565b84815283810192508684016060808702890186018a10156124a8578788fd5b875b878110156125015781838c0312156124c0578889fd5b84516124cb81612f43565b83356124d681613072565b815283880135888201526124eb86850161259b565b81870152865294860194918101916001016124aa565b50919998505050505050505050565b80356001600160f01b03198116811461252857600080fd5b919050565b600082601f83011261253d578081fd5b81356001600160401b0381111561255657612556612fbb565b60405161256d601f8301601f191660200182612f68565b818152846020838601011115612581578283fd5b816020850160208301379081016020019190915292915050565b803563ffffffff8116811461252857600080fd5b6000602082840312156125c0578081fd5b81356125cb81613072565b9392505050565b6000602082840312156125e3578081fd5b81516125cb81613072565b60008060408385031215612600578081fd5b823561260b81613072565b915060208301356001600160401b03811115612625578182fd5b612631858286016123e3565b9150509250929050565b6000806040838503121561264d578182fd5b823561265881613072565b915061266660208401612510565b90509250929050565b60008060408385031215612681578182fd5b823561268c81613072565b946020939093013593505050565b6000602082840312156126ab578081fd5b81356001600160401b038111156126c0578182fd5b6126cc848285016123e3565b949350505050565b6000602082840312156126e5578081fd5b81356001600160401b038111156126fa578182fd5b6126cc8482850161245e565b6000806000806080858703121561271b578182fd5b84356001600160401b0380821115612731578384fd5b61273d8883890161245e565b95506020870135915080821115612752578384fd5b61275e8883890161252d565b94506040870135915080821115612773578384fd5b61277f8883890161252d565b93506060870135915080821115612794578283fd5b506127a18782880161252d565b91505092959194509250565b600080600080600060a086880312156127c4578283fd5b85356001600160401b03808211156127da578485fd5b6127e689838a0161245e565b965060208801359150808211156127fb578485fd5b61280789838a0161252d565b9550604088013591508082111561281c578485fd5b61282889838a0161252d565b9450606088013591508082111561283d578283fd5b61284989838a0161252d565b9350608088013591508082111561285e578283fd5b5061286b8882890161252d565b9150509295509295909350565b600060208284031215612889578081fd5b6125cb82612510565b60008060008060008060c087890312156128aa578384fd5b6128b387612510565b955060208701356001600160401b03808211156128ce578586fd5b6128da8a838b0161252d565b9650604089013595506128ef60608a0161259b565b94506080890135915080821115612904578283fd5b6129108a838b0161252d565b935060a0890135915080821115612925578283fd5b5061293289828a0161252d565b9150509295509295509295565b600080600080600080600060e0888a031215612959578485fd5b61296288612510565b965060208801356001600160401b038082111561297d578687fd5b6129898b838c0161252d565b975060408a0135965061299e60608b0161259b565b955060808a01359150808211156129b3578283fd5b6129bf8b838c0161252d565b945060a08a01359150808211156129d4578283fd5b6129e08b838c0161252d565b935060c08a01359150808211156129f5578283fd5b50612a028a828b0161252d565b91505092959891949750929550565b60008060408385031215612a23578182fd5b82356001600160401b0380821115612a39578384fd5b612a458683870161252d565b93506020850135915080821115612a5a578283fd5b506126318582860161252d565b600060208284031215612a78578081fd5b5051919050565b60008060008060008060c08789031215612a97578384fd5b86359550612aa760208801612510565b9450612ab560408801612510565b935060608701356001600160401b0380821115612ad0578384fd5b612adc8a838b0161252d565b94506080890135915080821115612904578384fd5b600080600080600080600060e0888a031215612b0b578081fd5b87359650612b1b60208901612510565b9550612b2960408901612510565b945060608801356001600160401b0380821115612b44578283fd5b61299e8b838c0161252d565b60008151808452612b68816020860160208601612edc565b601f01601f19169290920160200192915050565b60008251612b8e818460208701612edc565b9190910192915050565b6001600160a01b038616815260a060208201819052600090612bbc90830187612b50565b8560408401528281036060840152612bd48186612b50565b90508281036080840152612be88185612b50565b98975050505050505050565b6001600160a01b038816815260e0602082015286546000908190600181811c9082811680612c2357607f831692505b60208310811415612c4257634e487b7160e01b86526022600452602486fd5b60e087018390526101008701818015612c625760018114612c7457612c9f565b60ff1986168252602082019650612c9f565b60008f815260209020885b86811015612c995781548482015290850190602001612c7f565b83019750505b505050505050876040840152612cc160608401886001600160f01b0319169052565b63ffffffff8616608084015282810360a0840152612cdf8186612b50565b905082810360c0840152612cf38185612b50565b9a9950505050505050505050565b6001600160a01b03831681526040602082018190526000906126cc90830184612b50565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015612dcf57888303603f19018552815180516001600160f01b031990811685528882015181168986015287820151168785015260608082015160a08287018190529190612d9d83880182612b50565b9250505060808083015192508582038187015250612dbb8183612b50565b968901969450505090860190600101612d4b565b509098975050505050505050565b6001600160f01b0319858116825284166020820152608060408201819052600090612e0a90830185612b50565b9050821515606083015295945050505050565b6020815260006125cb6020830184612b50565b6020808252601590820152742a34329031b0b63632b91034b9903737ba102b272360591b604082015260600190565b85815260a060208201526000612e7860a0830187612b50565b8281036040840152612e8a8187612b50565b90508281036060840152612e9e8186612b50565b91505060018060a01b03831660808301529695505050505050565b60006001600160401b03821115612ed257612ed2612fbb565b5060051b60200190565b60005b83811015612ef7578181015183820152602001612edf565b838111156106665750506000910152565b600181811c90821680612f1c57607f821691505b60208210811415612f3d57634e487b7160e01b600052602260045260246000fd5b50919050565b606081018181106001600160401b0382111715612f6257612f62612fbb565b60405250565b601f8201601f191681016001600160401b0381118282101715612f8d57612f8d612fbb565b6040525050565b6000600019821415612fb457634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600060033d1115612fe657600481823e5160e01c5b90565b600060443d1015612ff75790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561302657505050505090565b828501915081518181111561303e5750505050505090565b843d87010160208285010111156130585750505050505090565b61306760208286010187612f68565b509095945050505050565b6001600160a01b038116811461308757600080fd5b5056fe5065726d697373696f6e733a207072696d617279206f66206f70657261746f72206c61636b73207065726d697373696f6e20666f722063726564656e7469616c547970655065726d697373696f6e733a207072696d617279206f66206f70657261746f72206c61636b732063726564656e7469616c3a6964656e746974796973737565207065726d697373696f6e5065726d697373696f6e733a207072696d617279206f66206f70657261746f72206c61636b7320726571756573746564207065726d697373696f6e5065726d697373696f6e733a207072696d617279206f66206f70657261746f72206c61636b732063726564656e7469616c3a6973737565207065726d697373696f6e5065726d697373696f6e733a207072696d617279206f66206f70657261746f72206c61636b732063726564656e7469616c3a636f6e746163746973737565207065726d697373696f6ea2646970667358221220911cf526f6ba24f42bd343f963e36cdfd445e2c53d4ac9cea937255d7dc53e8364736f6c63430008040033";

    private static String librariesLinkedBinary;

    public static final String FUNC_ADDFREETYPES = "addFreeTypes";

    public static final String FUNC_CHECKOPERATORWITHCREDENTIALTYPE = "checkOperatorWithCredentialType";

    public static final String FUNC_FREECREDENTIALTYPES = "freeCredentialTypes";

    public static final String FUNC_GETFREEENTRIES = "getFreeEntries";

    public static final String FUNC_GETPAIDENTRIES = "getPaidEntries";

    public static final String FUNC_GETPAIDENTRIESSIGNED = "getPaidEntriesSigned";

    public static final String FUNC_GETPERMISSIONSADDRESS = "getPermissionsAddress";

    public static final String FUNC_INITIALIZE = "initialize";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_ISEXISTMETADATALIST = "isExistMetadataList";

    public static final String FUNC_ISFREECREDENTIALTYPE = "isFreeCredentialType";

    public static final String FUNC_LISTS = "lists";

    public static final String FUNC_NEWMETADATALIST = "newMetadataList";

    public static final String FUNC_NEWMETADATALISTSIGNED = "newMetadataListSigned";

    public static final String FUNC_REMOVEFREETYPES = "removeFreeTypes";

    public static final String FUNC_SETCOUPONADDRESS = "setCouponAddress";

    public static final String FUNC_SETENTRY = "setEntry";

    public static final String FUNC_SETENTRYSIGNED = "setEntrySigned";

    public static final String FUNC_SETPERMISSIONSADDRESS = "setPermissionsAddress";

    public static final Event ADDEDCREDENTIALMETADATA_EVENT = new Event("AddedCredentialMetadata", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bytes2>() {}, new TypeReference<Uint32>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event CREATEDMETADATALIST_EVENT = new Event("CreatedMetadataList", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event GOTCREDENTIALMETADATA_EVENT = new Event("GotCredentialMetadata", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<CredentialMetadata>>() {}));
    ;

    public static final Event INITIALIZED_EVENT = new Event("Initialized", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
    ;

    @Deprecated
    protected VelocityNetworkMetadataRegistry(String contractAddress, Web3j web3j,
            Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected VelocityNetworkMetadataRegistry(String contractAddress, Web3j web3j,
            Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected VelocityNetworkMetadataRegistry(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected VelocityNetworkMetadataRegistry(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<AddedCredentialMetadataEventResponse> getAddedCredentialMetadataEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(ADDEDCREDENTIALMETADATA_EVENT, transactionReceipt);
        ArrayList<AddedCredentialMetadataEventResponse> responses = new ArrayList<AddedCredentialMetadataEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddedCredentialMetadataEventResponse typedResponse = new AddedCredentialMetadataEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.sender = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.issuerVc = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.listId = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.credentialType = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.index = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.traceId = (String) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.caoDid = (String) eventValues.getNonIndexedValues().get(6).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static AddedCredentialMetadataEventResponse getAddedCredentialMetadataEventFromLog(
            Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ADDEDCREDENTIALMETADATA_EVENT, log);
        AddedCredentialMetadataEventResponse typedResponse = new AddedCredentialMetadataEventResponse();
        typedResponse.log = log;
        typedResponse.sender = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.issuerVc = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.listId = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.credentialType = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.index = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
        typedResponse.traceId = (String) eventValues.getNonIndexedValues().get(5).getValue();
        typedResponse.caoDid = (String) eventValues.getNonIndexedValues().get(6).getValue();
        return typedResponse;
    }

    public Flowable<AddedCredentialMetadataEventResponse> addedCredentialMetadataEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getAddedCredentialMetadataEventFromLog(log));
    }

    public Flowable<AddedCredentialMetadataEventResponse> addedCredentialMetadataEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDEDCREDENTIALMETADATA_EVENT));
        return addedCredentialMetadataEventFlowable(filter);
    }

    public static List<CreatedMetadataListEventResponse> getCreatedMetadataListEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(CREATEDMETADATALIST_EVENT, transactionReceipt);
        ArrayList<CreatedMetadataListEventResponse> responses = new ArrayList<CreatedMetadataListEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            CreatedMetadataListEventResponse typedResponse = new CreatedMetadataListEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.sender = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.issuerVc = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.listId = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.traceId = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.caoDid = (String) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static CreatedMetadataListEventResponse getCreatedMetadataListEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(CREATEDMETADATALIST_EVENT, log);
        CreatedMetadataListEventResponse typedResponse = new CreatedMetadataListEventResponse();
        typedResponse.log = log;
        typedResponse.sender = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.issuerVc = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.listId = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.traceId = (String) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.caoDid = (String) eventValues.getNonIndexedValues().get(4).getValue();
        return typedResponse;
    }

    public Flowable<CreatedMetadataListEventResponse> createdMetadataListEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getCreatedMetadataListEventFromLog(log));
    }

    public Flowable<CreatedMetadataListEventResponse> createdMetadataListEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CREATEDMETADATALIST_EVENT));
        return createdMetadataListEventFlowable(filter);
    }

    public static List<GotCredentialMetadataEventResponse> getGotCredentialMetadataEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(GOTCREDENTIALMETADATA_EVENT, transactionReceipt);
        ArrayList<GotCredentialMetadataEventResponse> responses = new ArrayList<GotCredentialMetadataEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            GotCredentialMetadataEventResponse typedResponse = new GotCredentialMetadataEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.credentialMetadataList = (List<CredentialMetadata>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static GotCredentialMetadataEventResponse getGotCredentialMetadataEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(GOTCREDENTIALMETADATA_EVENT, log);
        GotCredentialMetadataEventResponse typedResponse = new GotCredentialMetadataEventResponse();
        typedResponse.log = log;
        typedResponse.credentialMetadataList = (List<CredentialMetadata>) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<GotCredentialMetadataEventResponse> gotCredentialMetadataEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getGotCredentialMetadataEventFromLog(log));
    }

    public Flowable<GotCredentialMetadataEventResponse> gotCredentialMetadataEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(GOTCREDENTIALMETADATA_EVENT));
        return gotCredentialMetadataEventFlowable(filter);
    }

    public static List<InitializedEventResponse> getInitializedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(INITIALIZED_EVENT, transactionReceipt);
        ArrayList<InitializedEventResponse> responses = new ArrayList<InitializedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InitializedEventResponse typedResponse = new InitializedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static InitializedEventResponse getInitializedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(INITIALIZED_EVENT, log);
        InitializedEventResponse typedResponse = new InitializedEventResponse();
        typedResponse.log = log;
        typedResponse.version = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<InitializedEventResponse> initializedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getInitializedEventFromLog(log));
    }

    public Flowable<InitializedEventResponse> initializedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(INITIALIZED_EVENT));
        return initializedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addFreeTypes(
            List<byte[]> freeCredentialTypesList) {
        final Function function = new Function(
                FUNC_ADDFREETYPES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes2>(
                        org.web3j.abi.datatypes.generated.Bytes2.class,
                        org.web3j.abi.Utils.typeMap(freeCredentialTypesList, org.web3j.abi.datatypes.generated.Bytes2.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> checkOperatorWithCredentialType(String operator,
            byte[] credentialType) {
        final Function function = new Function(FUNC_CHECKOPERATORWITHCREDENTIALTYPE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, operator), 
                new org.web3j.abi.datatypes.generated.Bytes2(credentialType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> freeCredentialTypes(byte[] param0) {
        final Function function = new Function(FUNC_FREECREDENTIALTYPES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes2(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<List> getFreeEntries(List<CredentialIdentifier> _entryIndexes) {
        final Function function = new Function(FUNC_GETFREEENTRIES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<CredentialIdentifier>(CredentialIdentifier.class, _entryIndexes)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<CredentialMetadata>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> getPaidEntries(
            List<CredentialIdentifier> _entryIndexes, String traceId, String caoDid,
            String burnerDid) {
        final Function function = new Function(
                FUNC_GETPAIDENTRIES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<CredentialIdentifier>(CredentialIdentifier.class, _entryIndexes),
                new org.web3j.abi.datatypes.Utf8String(traceId), 
                new org.web3j.abi.datatypes.Utf8String(caoDid), 
                new org.web3j.abi.datatypes.Utf8String(burnerDid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getPaidEntriesSigned(
            List<CredentialIdentifier> _entryIndexes, String traceId, String caoDid,
            String burnerDid, byte[] signature) {
        final Function function = new Function(
                FUNC_GETPAIDENTRIESSIGNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<CredentialIdentifier>(CredentialIdentifier.class, _entryIndexes), 
                new org.web3j.abi.datatypes.Utf8String(traceId), 
                new org.web3j.abi.datatypes.Utf8String(caoDid), 
                new org.web3j.abi.datatypes.Utf8String(burnerDid), 
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getPermissionsAddress() {
        final Function function = new Function(FUNC_GETPERMISSIONSADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> initialize(String _coupon,
            List<byte[]> freeCredentialTypesList) {
        final Function function = new Function(
                FUNC_INITIALIZE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _coupon), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes2>(
                        org.web3j.abi.datatypes.generated.Bytes2.class,
                        org.web3j.abi.Utils.typeMap(freeCredentialTypesList, org.web3j.abi.datatypes.generated.Bytes2.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final Function function = new Function(FUNC_ISEQUAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a), 
                new org.web3j.abi.datatypes.Utf8String(b)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isExistMetadataList(String accountId, BigInteger listId) {
        final Function function = new Function(FUNC_ISEXISTMETADATALIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, accountId), 
                new org.web3j.abi.datatypes.generated.Uint256(listId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isFreeCredentialType(byte[] credentialType) {
        final Function function = new Function(FUNC_ISFREECREDENTIALTYPE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes2(credentialType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Tuple4<byte[], byte[], byte[], Boolean>> lists(String param0,
            BigInteger param1) {
        final Function function = new Function(FUNC_LISTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0), 
                new org.web3j.abi.datatypes.generated.Uint256(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes2>() {}, new TypeReference<Bytes2>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Bool>() {}));
        return new RemoteFunctionCall<Tuple4<byte[], byte[], byte[], Boolean>>(function,
                new Callable<Tuple4<byte[], byte[], byte[], Boolean>>() {
                    @Override
                    public Tuple4<byte[], byte[], byte[], Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<byte[], byte[], byte[], Boolean>(
                                (byte[]) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue(), 
                                (byte[]) results.get(2).getValue(), 
                                (Boolean) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> newMetadataList(BigInteger listId, byte[] algType,
            byte[] version, byte[] issuerVc, String traceId, String caoDid) {
        final Function function = new Function(
                FUNC_NEWMETADATALIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(listId), 
                new org.web3j.abi.datatypes.generated.Bytes2(algType), 
                new org.web3j.abi.datatypes.generated.Bytes2(version), 
                new org.web3j.abi.datatypes.DynamicBytes(issuerVc), 
                new org.web3j.abi.datatypes.Utf8String(traceId), 
                new org.web3j.abi.datatypes.Utf8String(caoDid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> newMetadataListSigned(BigInteger listId,
            byte[] algType, byte[] version, byte[] issuerVc, String traceId, String caoDid,
            byte[] signature) {
        final Function function = new Function(
                FUNC_NEWMETADATALISTSIGNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(listId), 
                new org.web3j.abi.datatypes.generated.Bytes2(algType), 
                new org.web3j.abi.datatypes.generated.Bytes2(version), 
                new org.web3j.abi.datatypes.DynamicBytes(issuerVc), 
                new org.web3j.abi.datatypes.Utf8String(traceId), 
                new org.web3j.abi.datatypes.Utf8String(caoDid), 
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeFreeTypes(
            List<byte[]> freeCredentialTypesList) {
        final Function function = new Function(
                FUNC_REMOVEFREETYPES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes2>(
                        org.web3j.abi.datatypes.generated.Bytes2.class,
                        org.web3j.abi.Utils.typeMap(freeCredentialTypesList, org.web3j.abi.datatypes.generated.Bytes2.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCouponAddress(String _coupon) {
        final Function function = new Function(
                FUNC_SETCOUPONADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _coupon)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setEntry(byte[] credentialType,
            byte[] encryptedPublicKey, BigInteger listId, BigInteger index, String traceId,
            String caoDid) {
        final Function function = new Function(
                FUNC_SETENTRY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes2(credentialType), 
                new org.web3j.abi.datatypes.DynamicBytes(encryptedPublicKey), 
                new org.web3j.abi.datatypes.generated.Uint256(listId), 
                new org.web3j.abi.datatypes.generated.Uint32(index), 
                new org.web3j.abi.datatypes.Utf8String(traceId), 
                new org.web3j.abi.datatypes.Utf8String(caoDid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setEntrySigned(byte[] credentialType,
            byte[] encryptedPublicKey, BigInteger listId, BigInteger index, String traceId,
            String caoDid, byte[] signature) {
        final Function function = new Function(
                FUNC_SETENTRYSIGNED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes2(credentialType), 
                new org.web3j.abi.datatypes.DynamicBytes(encryptedPublicKey), 
                new org.web3j.abi.datatypes.generated.Uint256(listId), 
                new org.web3j.abi.datatypes.generated.Uint32(index), 
                new org.web3j.abi.datatypes.Utf8String(traceId), 
                new org.web3j.abi.datatypes.Utf8String(caoDid), 
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPermissionsAddress(String _permissions) {
        final Function function = new Function(
                FUNC_SETPERMISSIONSADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _permissions)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static VelocityNetworkMetadataRegistry load(String contractAddress, Web3j web3j,
            Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new VelocityNetworkMetadataRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static VelocityNetworkMetadataRegistry load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new VelocityNetworkMetadataRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static VelocityNetworkMetadataRegistry load(String contractAddress, Web3j web3j,
            Credentials credentials, ContractGasProvider contractGasProvider) {
        return new VelocityNetworkMetadataRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static VelocityNetworkMetadataRegistry load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new VelocityNetworkMetadataRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<VelocityNetworkMetadataRegistry> deploy(Web3j web3j,
            Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(VelocityNetworkMetadataRegistry.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<VelocityNetworkMetadataRegistry> deploy(Web3j web3j,
            Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(VelocityNetworkMetadataRegistry.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static RemoteCall<VelocityNetworkMetadataRegistry> deploy(Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(VelocityNetworkMetadataRegistry.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<VelocityNetworkMetadataRegistry> deploy(Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(VelocityNetworkMetadataRegistry.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static void linkLibraries(List<Contract.LinkReference> references) {
        librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
    }

    private static String getDeploymentBinary() {
        if (librariesLinkedBinary != null) {
            return librariesLinkedBinary;
        } else {
            return BINARY;
        }
    }

    public static class CredentialMetadata extends DynamicStruct {
        public byte[] version;

        public byte[] credentialType;

        public byte[] algType;

        public byte[] encryptedPublicKey;

        public byte[] issuerVc;

        public CredentialMetadata(byte[] version, byte[] credentialType, byte[] algType,
                byte[] encryptedPublicKey, byte[] issuerVc) {
            super(new org.web3j.abi.datatypes.generated.Bytes2(version), 
                    new org.web3j.abi.datatypes.generated.Bytes2(credentialType), 
                    new org.web3j.abi.datatypes.generated.Bytes2(algType), 
                    new org.web3j.abi.datatypes.DynamicBytes(encryptedPublicKey), 
                    new org.web3j.abi.datatypes.DynamicBytes(issuerVc));
            this.version = version;
            this.credentialType = credentialType;
            this.algType = algType;
            this.encryptedPublicKey = encryptedPublicKey;
            this.issuerVc = issuerVc;
        }

        public CredentialMetadata(Bytes2 version, Bytes2 credentialType, Bytes2 algType,
                DynamicBytes encryptedPublicKey, DynamicBytes issuerVc) {
            super(version, credentialType, algType, encryptedPublicKey, issuerVc);
            this.version = version.getValue();
            this.credentialType = credentialType.getValue();
            this.algType = algType.getValue();
            this.encryptedPublicKey = encryptedPublicKey.getValue();
            this.issuerVc = issuerVc.getValue();
        }
    }

    public static class CredentialIdentifier extends StaticStruct {
        public String accountId;

        public BigInteger listId;

        public BigInteger index;

        public CredentialIdentifier(String accountId, BigInteger listId, BigInteger index) {
            super(new org.web3j.abi.datatypes.Address(160, accountId), 
                    new org.web3j.abi.datatypes.generated.Uint256(listId), 
                    new org.web3j.abi.datatypes.generated.Uint32(index));
            this.accountId = accountId;
            this.listId = listId;
            this.index = index;
        }

        public CredentialIdentifier(Address accountId, Uint256 listId, Uint32 index) {
            super(accountId, listId, index);
            this.accountId = accountId.getValue();
            this.listId = listId.getValue();
            this.index = index.getValue();
        }
    }

    public static class AddedCredentialMetadataEventResponse extends BaseEventResponse {
        public String sender;

        public byte[] issuerVc;

        public BigInteger listId;

        public byte[] credentialType;

        public BigInteger index;

        public String traceId;

        public String caoDid;
    }

    public static class CreatedMetadataListEventResponse extends BaseEventResponse {
        public String sender;

        public byte[] issuerVc;

        public BigInteger listId;

        public String traceId;

        public String caoDid;
    }

    public static class GotCredentialMetadataEventResponse extends BaseEventResponse {
        public List<CredentialMetadata> credentialMetadataList;
    }

    public static class InitializedEventResponse extends BaseEventResponse {
        public BigInteger version;
    }
}
